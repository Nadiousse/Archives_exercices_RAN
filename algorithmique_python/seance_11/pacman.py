# Jeu Pac Man en algorithmique

# Explications sur le fonctionnement du jeu

score = 0

# La map de base

map = [
    ["╔", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "╗", "╔", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "╗"],
    ["║", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "║", "║", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "║"],
    ["║", "•", "╔", "═", "═", "╗", "•", "╔", "═", "═", "═", "╗", "•", "║", "║", "•", "╔", "═", "═", "═", "╗", "•", "╔", "═", "═", "╗", "•", "║"],
    ["║", "○", "║", " ", " ", "║", "•", "║", " ", " ", " ", "║", "•", "║", "║", "•", "║", " ", " ", " ", "║", "•", "║", " ", " ", "║", "○", "║"],
    ["║", "•", "╚", "═", "═", "╝", "•", "╚", "═", "═", "═", "╝", "•", "╚", "╝", "•", "╚", "═", "═", "═", "╝", "•", "╚", "═", "═", "╝", "•", "║"],
    ["║", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "║"],
    ["║", "•", "╔", "═", "═", "╗", "•", "╔", "╗", "•", "╔", "═", "═", "═", "═", "═", "═", "╗", "•", "╔", "╗", "•", "╔", "═", "═", "╗", "•", "║"],
    ["║", "•", "╚", "═", "═", "╝", "•", "║", "║", "•", "╚", "═", "═", "╗", "╔", "═", "═", "╝", "•", "║", "║", "•", "╚", "═", "═", "╝", "•", "║"],
    ["║", "•", "•", "•", "•", "•", "•", "║", "║", "•", "•", "•", "•", "║", "║", "•", "•", "•", "•", "║", "║", "•", "•", "•", "•", "•", "•", "║"],
    ["╚", "═", "═", "═", "═", "╗", "•", "║", "╚", "═", "═", "╗", " ", "║", "║", " ", "╔", "═", "═", "╝", "║", "•", "╔", "═", "═", "═", "═", "╝"],
    [" ", " ", " ", " ", " ", "║", "•", "║", "╔", "═", "═", "╝", " ", "╚", "╝", " ", "╚", "═", "═", "╗", "║", "•", "║", " ", " ", " ", " ", " "],
    [" ", " ", " ", " ", " ", "║", "•", "║", "║", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "║", "║", "•", "║", " ", " ", " ", " ", " "],
    [" ", " ", " ", " ", " ", "║", "•", "║", "║", " ", "╔", "═", "═", "▬", "▬", "═", "═", "╗", " ", "║", "║", "•", "║", " ", " ", " ", " ", " "],
    ["═", "═", "═", "═", "═", "╝", " ", "╚", "╝", " ", "║", " ", " ", " ", " ", " ", " ", "║", " ", "╚", "╝", " ", "╚", "═", "═", "═", "═", "═"],
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "║", " ", " ", " ", " ", " ", " ", "║", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
    ["═", "═", "═", "═", "═", "╗", " ", "╔", "╗", " ", "║", " ", " ", " ", " ", " ", " ", "║", " ", "╔", "╗", " ", "╔", "═", "═", "═", "═", "═"],
    [" ", " ", " ", " ", " ", "║", "•", "║", "║", " ", "╚", "═", "═", "═", "═", "═", "═", "╝", " ", "║", "║", "•", "║", " ", " ", " ", " ", " "],
    [" ", " ", " ", " ", " ", "║", "•", "║", "║", " ", " ", " ", " ", "♫", " ", " ", " ", " ", " ", "║", "║", "•", "║", " ", " ", " ", " ", " "],
    [" ", " ", " ", " ", " ", "║", "•", "║", "║", " ", "╔", "═", "═", "═", "═", "═", "═", "╗", " ", "║", "║", "•", "║", " ", " ", " ", " ", " "],
    ["╔", "═", "═", "═", "═", "╝", " ", "╚", "╝", " ", "╚", "═", "═", "╗", "╔", "═", "═", "╝", " ", "╚", "╝", " ", "╚", "═", "═", "═", "═", "╗"],
    ["║", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "║", "║", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "║"],
    ["║", "•", "╔", "═", "═", "╗", "•", "╔", "═", "═", "═", "╗", "•", "║", "║", "•", "╔", "═", "═", "═", "╗", "•", "╔", "═", "═", "╗", "•", "║"],
    ["║", "•", "╚", "═", "╗", "║", "•", "╚", "═", "═", "═", "╝", "•", "╚", "╝", "•", "╚", "═", "═", "═", "╝", "•", "║", "╔", "═", "╝", "•", "║"],
    ["║", "○", "•", "•", "║", "║", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "║", "║", "•", "•", "○", "║"],
    ["╚", "═", "╗", "•", "║", "║", "•", "╔", "╗", "•", "╔", "═", "═", "═", "═", "═", "═", "╗", "•", "╔", "╗", "•", "║", "║", "•", "╔", "═", "╝"],
    ["╔", "═", "╝", "•", "╚", "╝", "•", "║", "║", "•", "╚", "═", "═", "╗", "╔", "═", "═", "╝", "•", "║", "║", "•", "╚", "╝", "•", "╚", "═", "╗"],
    ["║", "•", "•", "•", "•", "•", "•", "║", "║", "•", "•", "•", "•", "║", "║", "•", "•", "•", "•", "║", "║", "•", "•", "•", "•", "•", "•", "║"],
    ["║", "•", "╔", "═", "═", "═", "═", "╝", "╚", "═", "═", "╗", "•", "║", "║", "•", "╔", "═", "═", "╝", "╚", "═", "═", "═", "═", "╗", "•", "║"],
    ["║", "•", "╚", "═", "═", "═", "═", "═", "═", "═", "═", "╝", "•", "╚", "╝", "•", "╔", "═", "═", "═", "═", "═", "═", "═", "═", "╝", "•", "║"],
    ["║", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "•", "║"],
    ["╚", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "═", "╝"],
]

# Définitions des blocks

limites = ["║", "═", "╔", "╚", "╗", "╝",]

plus_un = "•"
plus_trois = "○"

fruit = "♫"

# Affichage de la map

def aff_map(map):
    print("Score = ", score)
    for i in range(len(map)):
        for j in range(len(map[i])):
            print(map[i][j], end="")
        print("")

# Definition de Pac Man

pacman_sprite = "☺"

# Coordonnées de départ

x = 1
y = 1

x_cible = 1
y_cible = 1

# Placement Pac Man dans la map

map[y][x]= pacman_sprite

# Début programme : afficher la map

while True :
    aff_map(map)

    while True :
        try:
            déplacement = input()
            déplacement = déplacement.lower()

            if déplacement not in "zqsd":
                raise ValueError
            
            # coordonnées cibles
            
            if déplacement == "s":
                y_cible += 1
            elif déplacement == "z":
                y_cible -= 1
            elif déplacement == "q":
                x_cible -= 1
            elif déplacement == "d":
                x_cible += 1
            
            # bloc témoin

            block = map[y_cible][x_cible]

            # vérification contenu bloc témoin
            
            for limite in limites:
                if block == limite :
                    raise ValueError

            # Vérification score
            if block == plus_un:
                score += 1
            elif block == plus_trois:
                score += 3
            elif block == fruit:
                score *= 2

            # modification de coordonnées initiales

            map[y][x]= " "

            x = x_cible
            y = y_cible

            map[y][x]= pacman_sprite

            break    

        except ValueError:
            x_cible = x
            y_cible = y
            print("ValueError")